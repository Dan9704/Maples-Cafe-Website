{"ast":null,"code":"import AdminDashboard from './AdminDashboard.vue';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport default {\n  name: 'ComponentFour',\n  components: {\n    AdminDashboard\n  },\n  data() {\n    // This is the old code\n    // return {\n    //     showPasswordInPlainText: false,\n    //     username: '',\n    //     password: '',\n    //     authenticated: false,\n    //     errMessage: ''\n    // }\n    // This is the new code\n    return {\n      msg: '',\n      input: {\n        username: '',\n        password: ''\n      },\n      valid: true,\n      usernameRules: [v => !!v || 'Name is required', v => v && v.length <= 10 || 'Name must be less than 10 characters'],\n      passwordRules: [v => !!v || 'Password is required', v => v && v.length >= 8 || 'Password must be more than 8 characters']\n    };\n  },\n  methods: {\n    // This is the old one\n    // login() {\n    //     // Send a POST request to the API for validation\n    //     fetch('api_user.php', {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify(this.credential)\n    //     })\n    //         .then(response => {\n    //             if (response.ok) {\n    //                 return response.json();\n    //             } else {\n    //                 throw new Error('Authentication failed');\n    //             }\n    //         })\n    //         .then(data => {\n    //             console.log(\"Logon successful\");\n    //             this.authenticated = true;\n    //         })\n    //         .catch(error => {\n    //             console.error('An error occurred during form validation:', error);\n    //             this.errMessage = 'Please try again.';\n    //             this.authenticated = false;\n    //         });\n    //     this.username = '';\n    //     this.password = '';\n    // }\n\n    login() {\n      if (this.$refs.form.validate()) {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.input.username,\n            password: this.input.password\n          })\n        };\n        fetch(\"/api_user.php/\", requestOptions).then(response => response.json()).then(data => {\n          if (data === null) {\n            this.msg = \"Username or password incorrect.\";\n          } else {\n            this.$emit(\"authenticated\", true);\n            this.$router.replace({\n              name: \"dashboard\"\n            });\n          }\n        }).catch(error => {\n          this.msg = \"Error: \" + error;\n        });\n      }\n    }\n  },\n  computed: {\n    credential() {\n      return {\n        username: this.username,\n        password: this.password\n      };\n    }\n  }\n};","map":{"version":3,"names":["AdminDashboard","name","components","data","msg","input","username","password","valid","usernameRules","v","length","passwordRules","methods","login","$refs","form","validate","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","$emit","$router","replace","catch","error","computed","credential"],"sources":["/Users/admin/Documents/HDTask/Coffee/src/components/Component4.vue"],"sourcesContent":["<template>\n    <v-card-item v-if=\"!authenticated\">\n        <v-card-title>Admin Login</v-card-title>\n        <v-card-text class=\"my-4\">\n            <v-sheet max-width=\"500\" class=\"mx-auto\">\n                <v-form class=\"border elevation-4 rounded-lg p-3\">\n                    <v-text-field v-model=\"username\" label=\"Username\" outlined></v-text-field>\n                    <v-text-field v-model=\"password\" :append-icon=\"showPasswordInPlainText ? 'mdi-eye' : 'mdi-eye-off'\"\n                        :type=\"showPasswordInPlainText ? 'text' : 'password'\" name=\"input-10-1\" label=\"Password\" counter\n                        @click:append=\"showPasswordInPlainText = !showPasswordInPlainText\" outlined></v-text-field>\n                    <v-alert v-if=\"errMessage !== ''\" color=\"#ffccd5\" type=\"error\" title=\"Invalid Credentials\" :text=\"errMessage\"></v-alert>\n                    <v-btn @click=\"login()\" type=\"button\" class=\"mt-2\" text=\"Login\" block></v-btn>\n                </v-form>\n            </v-sheet>\n        </v-card-text>\n    </v-card-item>\n    <v-card-item v-else>\n        <AdminDashboard></AdminDashboard>\n    </v-card-item>\n</template>\n\n<script>\nimport AdminDashboard from './AdminDashboard.vue';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nexport default {\n    name: 'ComponentFour',\n    components: {\n        AdminDashboard\n    },\n    data() {\n        // This is the old code\n        // return {\n        //     showPasswordInPlainText: false,\n        //     username: '',\n        //     password: '',\n        //     authenticated: false,\n        //     errMessage: ''\n        // }\n        // This is the new code\n        return {\n            msg: '',\n            input: {\n                username: '',\n                password: ''\n            },\n            valid: true,\n            usernameRules: [\n                v => !!v || 'Name is required',\n                v => (v && v.length <= 10) || 'Name must be less than 10 characters'\n            ],\n            passwordRules: [\n                v => !!v || 'Password is required',\n                v => (v && v.length >= 8) || 'Password must be more than 8 characters'\n            ]\n        }\n    },\n    methods: {\n        // This is the old one\n        // login() {\n        //     // Send a POST request to the API for validation\n        //     fetch('api_user.php', {\n        //         method: 'POST',\n        //         headers: {\n        //             'Content-Type': 'application/json'\n        //         },\n        //         body: JSON.stringify(this.credential)\n        //     })\n        //         .then(response => {\n        //             if (response.ok) {\n        //                 return response.json();\n        //             } else {\n        //                 throw new Error('Authentication failed');\n        //             }\n        //         })\n        //         .then(data => {\n        //             console.log(\"Logon successful\");\n        //             this.authenticated = true;\n        //         })\n        //         .catch(error => {\n        //             console.error('An error occurred during form validation:', error);\n        //             this.errMessage = 'Please try again.';\n        //             this.authenticated = false;\n        //         });\n        //     this.username = '';\n        //     this.password = '';\n        // }\n\n\n        login() {\n            if (this.$refs.form.validate()) {\n                const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.input.username,\n                    password: this.input.password\n                })\n                };\n\n                fetch(\"/api_user.php/\", requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data === null) {\n                    this.msg = \"Username or password incorrect.\";\n                    } else {\n                    this.$emit(\"authenticated\", true);\n                    this.$router.replace({ name: \"dashboard\" });\n                    }\n                })\n                .catch(error => {\n                    this.msg = \"Error: \" + error;\n                });\n            }\n        },\n\n\n    },\n    computed: {\n        credential() {\n            return {\n                username: this.username,\n                password: this.password\n            }\n        }\n    }\n};\n</script>\n"],"mappings":"AAsBA,OAAOA,cAAa,MAAO,sBAAsB;AACjD,OAAO,kCAAkC;AAGzC,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO;MACHC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE;QACHC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACd,CAAC;MACDC,KAAK,EAAE,IAAI;MACXC,aAAa,EAAE,CACXC,CAAA,IAAK,CAAC,CAACA,CAAA,IAAK,kBAAkB,EAC9BA,CAAA,IAAMA,CAAA,IAAKA,CAAC,CAACC,MAAK,IAAK,EAAE,IAAK,sCAAqC,CACtE;MACDC,aAAa,EAAE,CACXF,CAAA,IAAK,CAAC,CAACA,CAAA,IAAK,sBAAsB,EAClCA,CAAA,IAAMA,CAAA,IAAKA,CAAC,CAACC,MAAK,IAAK,CAAC,IAAK,yCAAwC;IAE7E;EACJ,CAAC;EACDE,OAAO,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGAC,KAAKA,CAAA,EAAG;MACJ,IAAI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC5B,MAAMC,cAAa,GAAI;UACvBC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBjB,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAQ;YAC7BC,QAAQ,EAAE,IAAI,CAACF,KAAK,CAACE;UACzB,CAAC;QACD,CAAC;QAEDiB,KAAK,CAAC,gBAAgB,EAAEN,cAAc,EACrCO,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACtB,IAAG,IAAK;UACV,IAAIA,IAAG,KAAM,IAAI,EAAE;YACnB,IAAI,CAACC,GAAE,GAAI,iCAAiC;UAC5C,OAAO;YACP,IAAI,CAACwB,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC;YACjC,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;cAAE7B,IAAI,EAAE;YAAY,CAAC,CAAC;UAC3C;QACJ,CAAC,EACA8B,KAAK,CAACC,KAAI,IAAK;UACZ,IAAI,CAAC5B,GAAE,GAAI,SAAQ,GAAI4B,KAAK;QAChC,CAAC,CAAC;MACN;IACJ;EAGJ,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAUA,CAAA,EAAG;MACT,OAAO;QACH5B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACnB;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}