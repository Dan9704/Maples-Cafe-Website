{"ast":null,"code":"import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport default {\n  name: 'AdminDashboard',\n  data: function () {\n    return {\n      applications: [],\n      loading: true\n    };\n  },\n  mounted() {\n    this.fetchApplications();\n  },\n  methods: {\n    fetchApplications() {\n      axios\n      // .get('https://mercury.swin.edu.au/cos30043/s104357292/HDTASK/Coffee/src/resources/api_apply.php/')\n      .get('https://mercury.swin.edu.au/cos20031/s104194774/duonghdtask/resources/api_apply.php/').then(response => {\n        this.applications = response.data;\n        this.applications.reverse();\n        this.loading = false;\n      }).catch(error => {\n        console.error('Failed to fetch applications:', error);\n        this.loading = false;\n      });\n    },\n    /* eslint-disable */\n    deleteApplication: function (application) {\n      var delSQLApiURL = 'https://mercury.swin.edu.au/cos20031/s104194774/duonghdtask/resources/api_apply.php/' + application;\n      var self = this;\n      // DELETE request using fetch with error handling\n      const requestOptions = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: code\n        })\n      };\n      fetch(delSQLApiURL, requestOptions).then(response => {\n        //turning the response into the usable data\n        return response.json();\n      }).then(data => {\n        //This is the data you wanted to get from url\n        self.msg = \"Data deleted Successfully\";\n      }).catch(error => {\n        self.msg = 'There was an error!';\n        self.statusText = error;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","applications","loading","mounted","fetchApplications","methods","get","then","response","reverse","catch","error","console","deleteApplication","application","delSQLApiURL","self","requestOptions","method","headers","body","JSON","stringify","code","fetch","json","msg","statusText"],"sources":["/Users/admin/Documents/HDTask/Coffee/src/components/AdminDashboard.vue"],"sourcesContent":["<template>\n    <v-card-title>Admin Dashboard</v-card-title>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else>\n        <v-card-item title=\"Recent Applications\">\n            <v-card class=\"m-4 p-3\" v-for=\"application in applications\" :key=\"application.id\">\n                <v-card-title>Application {{ application.id }}</v-card-title>\n                <!-- Delete Button added 18/5 Sat -->\n                <v-btn depressed v-on:click=\"deleteApplication(application)\" color=\"primary\">\n                    Delete Candidate\n                </v-btn>\n                <v-card-subtitle>Position: {{ application.position }}. Store: {{ application.store\n                }}</v-card-subtitle>\n                <v-card-text>\n                    <div>\n                        Name: {{ application.name }}\n                    </div>\n                    <div>\n                        Contact email: {{ application.email }}\n                    </div>\n                    <div>\n                        Contact phone: {{ application.phone }}\n                    </div>\n                    <div>\n                        Address: {{ application.address }}\n                    </div>\n                    <div>\n                        Education: {{ application.education }}\n                    </div>\n                    <div>\n                        Experience: {{ application.experience }}\n                    </div>\n                    <div>\n                        Submission date: {{ application.submission_date }}\n                    </div>\n                    <div>\n                        Description: {{ application.description }}\n                    </div>\n                    \n                </v-card-text>\n            </v-card>\n        </v-card-item>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default {\n    name: 'AdminDashboard',\n    data: function() {\n        return {\n            applications: [],\n            loading: true\n        };\n    },\n    mounted() {\n        this.fetchApplications();\n    },\n    methods: {\n        fetchApplications() {\n            axios\n                // .get('https://mercury.swin.edu.au/cos30043/s104357292/HDTASK/Coffee/src/resources/api_apply.php/')\n                .get('https://mercury.swin.edu.au/cos20031/s104194774/duonghdtask/resources/api_apply.php/')\n\n                .then(response => {\n                    this.applications = response.data;\n                    this.applications.reverse();\n                    this.loading = false;\n                })\n                .catch(error => {\n                    console.error('Failed to fetch applications:', error);\n                    this.loading = false;\n                });\n        },\n\n         /* eslint-disable */\n        deleteApplication: function(application) {\n        var delSQLApiURL = 'https://mercury.swin.edu.au/cos20031/s104194774/duonghdtask/resources/api_apply.php/' + application;\n\n        var self = this;\n        // DELETE request using fetch with error handling\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n            name: code\n            })\n        };\n\n            fetch(delSQLApiURL, requestOptions)\n            .then( response =>{\n                //turning the response into the usable data\n                return response.json( );\n            })\n            .then( data =>{\n            //This is the data you wanted to get from url\n            self.msg = \"Data deleted Successfully\"\n                \n            })\n            .catch(error => {\n                self.msg = 'There was an error!';\n                self.statusText = error;\n            });\t\n        }\n    }\n};\n</script>\n  "],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAO,kCAAkC;AAEzC,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,SAAAA,CAAA,EAAW;IACb,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACLD,iBAAiBA,CAAA,EAAG;MAChBN;MACI;MAAA,CACCQ,GAAG,CAAC,sFAAsF,EAE1FC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACP,YAAW,GAAIO,QAAQ,CAACR,IAAI;QACjC,IAAI,CAACC,YAAY,CAACQ,OAAO,CAAC,CAAC;QAC3B,IAAI,CAACP,OAAM,GAAI,KAAK;MACxB,CAAC,EACAQ,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACT,OAAM,GAAI,KAAK;MACxB,CAAC,CAAC;IACV,CAAC;IAEA;IACDW,iBAAiB,EAAE,SAAAA,CAASC,WAAW,EAAE;MACzC,IAAIC,YAAW,GAAI,sFAAqF,GAAID,WAAW;MAEvH,IAAIE,IAAG,GAAI,IAAI;MACf;MACA,MAAMC,cAAa,GAAI;QACnBC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACT,cAAc,EAAE;QAChB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACrBvB,IAAI,EAAEwB;QACN,CAAC;MACL,CAAC;MAEGC,KAAK,CAACT,YAAY,EAAEE,cAAc,EACjCV,IAAI,CAAEC,QAAO,IAAI;QACd;QACA,OAAOA,QAAQ,CAACiB,IAAI,CAAE,CAAC;MAC3B,CAAC,EACAlB,IAAI,CAAEP,IAAG,IAAI;QACd;QACAgB,IAAI,CAACU,GAAE,GAAI,2BAA0B;MAErC,CAAC,EACAhB,KAAK,CAACC,KAAI,IAAK;QACZK,IAAI,CAACU,GAAE,GAAI,qBAAqB;QAChCV,IAAI,CAACW,UAAS,GAAIhB,KAAK;MAC3B,CAAC,CAAC;IACN;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}