{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\n// Vuetify\nimport 'vuetify/styles';\nimport { createVuetify } from 'vuetify';\nimport * as components from 'vuetify/components';\nimport * as directives from 'vuetify/directives';\nconst vuetify = createVuetify({\n  components,\n  directives\n});\ncreateApp(App).use(router).use(vuetify).mount('#app');\n\n// this is added thing to test the log in\n// Creating the VueRouter\n\nconst app = Vue.createApp({\n  data: function () {\n    return {\n      authenticated: false,\n      authenticatedUser: '',\n      error: false,\n      errorMsg: ''\n    };\n  },\n  mounted() {\n    if (!this.authenticated) {\n      this.$router.replace({\n        name: \"login\"\n      });\n    }\n  },\n  methods: {\n    setAuthenticated(status) {\n      this.authenticated = status;\n    },\n    logout() {\n      this.authenticated = false;\n    }\n  }\n});","map":{"version":3,"names":["createApp","App","router","createVuetify","components","directives","vuetify","use","mount","app","Vue","data","authenticated","authenticatedUser","error","errorMsg","mounted","$router","replace","name","methods","setAuthenticated","status","logout"],"sources":["/Users/admin/Documents/HDTask/Coffee/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\n// Vuetify\nimport 'vuetify/styles'\nimport { createVuetify } from 'vuetify'\nimport * as components from 'vuetify/components'\nimport * as directives from 'vuetify/directives'\n\n\n\n\nconst vuetify = createVuetify({\n  components,\n  directives,\n})\n\ncreateApp(App)\n  .use(router)\n  .use(vuetify)\n  .mount('#app')\n\n\n  // this is added thing to test the log in\n// Creating the VueRouter\n\n\nconst app = Vue.createApp({\n\n  data: function () {\n\t  return{\n\t\tauthenticated: false,\n\t\tauthenticatedUser: '',\n\t\terror:false,\n\t\terrorMsg:'',\n  }\n  },\n   mounted() {\n        if(!this.authenticated) {\n                this.$router.replace({ name: \"login\" });\n            }\n        },\n\tmethods: {\n\t\tsetAuthenticated(status) {\n\t\t\tthis.authenticated = status;\n\n\t\t},\n\t\tlogout(){\n\t\t  this.authenticated=false;\n\t\t}\n\t},  \n    \n});"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,OAAO,gBAAgB;AACvB,SAASC,aAAa,QAAQ,SAAS;AACvC,OAAO,KAAKC,UAAU,MAAM,oBAAoB;AAChD,OAAO,KAAKC,UAAU,MAAM,oBAAoB;AAKhD,MAAMC,OAAO,GAAGH,aAAa,CAAC;EAC5BC,UAAU;EACVC;AACF,CAAC,CAAC;AAEFL,SAAS,CAACC,GAAG,CAAC,CACXM,GAAG,CAACL,MAAM,CAAC,CACXK,GAAG,CAACD,OAAO,CAAC,CACZE,KAAK,CAAC,MAAM,CAAC;;AAGd;AACF;;AAGA,MAAMC,GAAG,GAAGC,GAAG,CAACV,SAAS,CAAC;EAExBW,IAAI,EAAE,SAAAA,CAAA,EAAY;IACjB,OAAM;MACPC,aAAa,EAAE,KAAK;MACpBC,iBAAiB,EAAE,EAAE;MACrBC,KAAK,EAAC,KAAK;MACXC,QAAQ,EAAC;IACT,CAAC;EACD,CAAC;EACAC,OAAOA,CAAA,EAAG;IACL,IAAG,CAAC,IAAI,CAACJ,aAAa,EAAE;MAChB,IAAI,CAACK,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IAC3C;EACJ,CAAC;EACRC,OAAO,EAAE;IACRC,gBAAgBA,CAACC,MAAM,EAAE;MACxB,IAAI,CAACV,aAAa,GAAGU,MAAM;IAE5B,CAAC;IACDC,MAAMA,CAAA,EAAE;MACN,IAAI,CAACX,aAAa,GAAC,KAAK;IAC1B;EACD;AAED,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}